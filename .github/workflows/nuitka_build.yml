
name: Build Executable for Windows/MacOS/Linux

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main", "master" ]
  pull_request:
    branches: [ "main", "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:

  build:

    strategy:
      matrix:
        # os: [macos-latest, ubuntu-latest, windows-latest]
        os: [ubuntu-latest]
      
    runs-on: ${{ matrix.os }}
    env:
      # EXE_NAME: "product"
      EXE_NAME: $(basename $GITHUB_REPOSITORY)
    steps:
    
      # Check-out repository
      - uses: actions/checkout@v3
      
      # Setup Python
      - uses: actions/setup-python@v4
        with:
          python-version: '3.8' # Version range or exact version of a Python version to use, using SemVer's version range syntax
          architecture: 'x64' # optional x64 or x86. Defaults to x64 if not specified
          cache: 'pip'
          cache-dependency-path: |
            **/requirements*.txt

      - run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Start Build
        run: |
          cmd="--standalone \\
            --assume-yes-for-downloads \\
            --output-dir=build \\
            --output-file=${{ env.EXE_NAME }} \\
            --enable-plugin=pyside6 \\
            --disable-console"
          if [[ ${{ runner.os }} == 'macOS' ]]; then
            additional_args="--macos-create-app-bundle"
          elif [[ ${{ runner.os }} == 'Linux' ]]; then
            additional_args=""
          elif [[ ${{ runner.os }} == 'Windows' ]]; then
            additional_args=""
          else
            echo "Unsupported OS: ${{ runner.os }}"
            exit 1
          fi
          eval "python -m nuitka $cmd $additional_args main.py"
          
      - name: Test mv
        run: |
          if [[ ${{ runner.os }} == 'Linux' ]]; then
            mv build/main.dist build/${{ env.EXE_NAME }}
          elif [[ ${{ runner.os }} == 'Windows' ]]; then
            move build/main.dist build/${{ env.EXE_NAME }}
          fi
        
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.EXE_NAME }}_for_${{ runner.os }}
          path: |
            build/${{ env.EXE_NAME }}/*
            build/*.app
            
